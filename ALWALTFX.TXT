 
 ALWALTFX ver3.4 ＿＿＿＿＿＿＿＿＿/￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
 ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ Copyright(c)1997-2001 by A.Y.DAYO(^-^)v
 
 
■１．概要
 
 
 　デスクトップの操作性の向上を目的としたユーティリティーで、以下のような
 機能を持っています。
 
 
 ・PM/WorkplaceShellにおけるキー/マウス操作の拡張
 
 　　OS/2 における標準的な GUI 環境（Presentation Manager...以下「PM」と呼
 　称）でのウィンドウ操作（例えば Alt+F9 での最小化）のキー割り当てを、通
 　常はそれらの操作を受け付けないウィンドウ（例えば「OS/2 ウィンドウ表示」）
 　に対しても有効にしたり、タイトルバーをクリックする等のアクションにて、
 　フレーム・ウィンドウをロールアップ/ダウンさせたり、フレームやアイコンの
 　ドラッグ時のマウスカーソル位置をキー操作にて微調整したり等、キー/マウス
 　操作を拡張します。
 
 ・ポップアップメニュー
 
 　　例えば、PM が標準でサポートするテキストエディット機能（入力フィールド
 　と呼ばれます）に、クリップボードとのデータ転送を行うためのポップアップ
 　メニュー機能を付与します。
 
 ・フレームウィンドウ位置制御
 
 　　フォルダ等をオープンした際に、画面外にはみ出ていた場合に、自動的に中
 　央付近に移動させます。
 
 ・VIO窓位置/サイズ補正
 
 　　コマンド・プロンプト・ウィンドウ（以下「VIO窓」と呼称）は、「最大化」
 　「復元」の際にウィンドウが左上端等に強制移動しますが、それを抑制し、現
 　在のウィンドウ位置で最大化/復元するようにします。
 
 ・システムメニュー加工
 
 　　各ウィンドウのシステムメニューから、不要な項目を削除したり、メニュー
 　テキストをカスタマイズできます。
 
 ・REXXマクロ
 
 　　PMにおける様々なイベント...キー/マウスボタン入力、ウィンドウ最小/最大
 　化など...をトリガとして、REXXスクリプトを実行します。
 
 
___________________________________________________________________________
 
■２．実行方法
 
 
 　アーカイブファイルを任意のディレクトリへに解凍後、INST.EXE を実行すると、
 インストール処理...任意のディレクトリへのファイルコピー、及びプログラムア
 イコンの作成...が開始されます。
 　インストール処理が完了したら、アイコンをダブルクリックするなり、コマン
 ドラインからなり、お好みの方法で起動して下さい。:-)
 
 　※因みに、アンインストールする場合は、ALWALTFX を終了させてから、全ての
 　　ファイル及びプログラムアイコンを、手動で削除します。
 
 
___________________________________________________________________________
 
■３．旧バージョンからのアップグレード時の注意
 
 
●設定の引き継ぎについて
 
 　旧バージョンが作成した ALWALTFX.INI ファイルを保存しておけば、旧バージ
 ョンでの設定の大半を、新バージョンに引き継がせることが出来ますが、以下の
 （大幅に仕様変更された、あるいは新機能と置換された）機能については、再設
 定を行う必要があります。
 
 ・ver2.3 以前の、「Alt+Functionキー操作拡張」機能
 　（「PM(Alt+Function)キー操作拡張」機能で代替）
 
 ・ver2.51 以前の、「Workplaceオブジェクト設定」機能
 　（「REXXマクロ」機能で代替）
 
 ・ver2.51 以前の、「フレーム曖昧掴み」機能
 
 ・ver2.51 以前の、「微調整ドラッグ」機能
 
 ・ver3.0 以前の、「マウス操作拡張：ロールアップ/ダウン操作」機能
 
 
●DLLファイルの置き換えに失敗する場合
 
 　旧バージョン（特にver2.0以前で顕著）の ALWALTFX を既に使用されていた場
 合、インストールが正常に終了しない...具体的には、古いDLLファイルを新しい
 ファイルに置換できない...事があります（原因は不明）。
 　この現象に遭遇してしまった場合は、（インストーラの指示通り）インストー
 ル終了後に、一旦システムを再起動させる必要があります。
 
 
___________________________________________________________________________
 
■４．各機能について
 
 
 　ALWALTFX を起動すると現れる設定ノートブックの各項目の設定変更を行うと、
 即座に各機能の有効/無効を切り替えることができます。
 　また、最下段の「全機能休止」チェックボックスにより、一時的に全ての機能
 を無効にする事も出来ます。
 
 　※Tips:WorkplaceShellに関係する一部の機能は、ALWALTFX起動後にWorkplace
 　　ShellのプロセスIDが変わる（例えばフリーズによる死→蘇生の過程で）と、
 　　動作しなくなりますが、「全機能休止」状態をトグルさせる事により、DLL内
 　　部の初期化が行われ、それらの機能が再び正常に利用できるようになります。
 
 　設定項目は、ノートブックのページ毎に幾種類かに分類されています。
 
 
●キー操作拡張：PM(Alt+Function)キー操作
 
 　PM 標準のウィンドウ操作（例えば Alt+F9 での最小化）のキー割り当てを、独
 自に追加するための機能です。
 　また、この機能によるウィンドウの制御は、本来 PM 標準のウィンドウ操作は
 受け付けないウィンドウ（例えばVIO窓）に対しても有効です。
 
 　「機能」のコンボボックスを設定したい機能に合わせ、「割り当てキー操作」
 を設定して下さい。割り当てキーは、「Alt+」「Ctrl+」「Shift+」と、任意のキ
 ーの組み合わせで設定します。「チェック無し」が押し下げ無し、「チェック有
 り」が押し下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 
 　また、キー割り当てを行っても、アプリケーション側の機能の方が優先されて
 しまう場合は、「強力割り当て」をチェックする事で、本機能に優先的に使われ
 るようになります。
 　ただし、全てのアプリケーション上において、そのキー入力を（本機能以外の
 用途には）使えなくなってしまう可能性があるので注意。
 
 　選択可能な「機能」は、以下の通りです。
 （末尾の括弧内はデフォルトのキー割り当て）
 
 ・クローズ             ( Alt+F4  )
 ・復元                 ( Alt+F5  )
 ・移動                 ( Alt+F7  )
 ・サイズ変更           ( Alt+F8  )
 ・最小化               ( Alt+F9  )
 ・最大化               ( Alt+F10 )
 ・隠す                 ( Alt+F11 )
 ・ロールアップ/ダウン
 ・キー操作記録開始/終了
 ・拡張キー操作記録開始/終了
 ・キー操作再生
 ・キー操作遅延再生
 
 　デフォルトでは、PM 標準のウィンドウ操作と同じに設定されています。
 
 　※Tips:「隠す」のキー割り当てを Alt+F9 とすると、「最小化」と「隠す」を
 　　同一の操作で行えるようになります。
 　　（ver2.3 以前のバージョンでの「Alt+F9 → Alt+F11(隠す)」機能に相当）
 
 　「ロールアップ/ダウン」と「(拡張)キー操作記録/再生」は、ALWALTFX が独自
 にサポートする機能で、前者は、フレーム・ウィンドウをタイトルバーだけの状
 態に巻き上げたり、元に戻したりする機能です。
 （詳細は後述の「ロールアップ/ダウン動作設定」を参照）
 
 　後者は、一般に「キーボードマクロ」と呼ばれる機能で、「記録開始/終了」に
 割り当てたキー操作を１度行ってから、もう１度行うまでの間のキー操作を記録
 し、「再生」に割り当てたキー操作で再生します。
 　「キー操作遅延再生」は、その名の通り１アクション毎に少し間をおきながら
 再生処理を行います。普通の「キー操作再生」では誤動作する（キー入力を取り
 こぼしたり、順番が入れ替わったり等）場合は、こちらを使用してみて下さい。
 
 　本機能を利用される際に注意して頂きたい点を、以下に列挙します。
 
 　・「サイズ変更」「移動」は、Win-OS2 アプリ（シームレス）上では正常に動
 　　作しません。
 
 　・「ロールアップ/ダウン」は、Win-OS2 アプリ（シームレス）に対しては機能
 　　しません。
 
 　・「キー操作記録/再生」は、DOS窓及びWin-OS2 アプリ（シームレス）に対し
 　　ては機能しません。
 
 　・「キー操作記録/再生」において、キー操作記録中にフォーカス切り替えが発
 　　生した場合、記録を強制終了します。
 
 　・「キー操作記録/再生」において、アプリケーション側でキーボードアクセラ
 　　レータとして定義（例えば「OS/2 システム・エディター」の「Alt+BackSpace
 　　→やり直し」など）されているキー入力は、入力検知 → 記録が行えず、再
 　　生時にスキップされる恰好になります。
 
 　・上記の仕様について、「拡張キー操作記録」であれば、それらキーボードア
 　　クセラレータとして定義されているキー入力についても、記録を試みます。
 　　ただし、「拡張キー操作記録」を行ったウィンドウでしか再生できませんし、
 　　再生しなくて良い処理まで再生対象にしてしまう可能性もあるので、各々を
 　　試してみて、誤動作の少ない方を選んで使用して下さい。
 
 
●キー操作拡張：WorkplaceShellキー操作
 
 　WorkplaceShell におけるオブジェクトのウィンドウのメニュー項目...例えば
 フォルダの「オープン → アイコン表示」「プロパティー」「拡張子で分類」等
 の機能を、（メニューを出さずキー操作のみで）動作させる機能です。
 
 　「機能」のコンボボックスを設定したい機能に合わせ、「割り当てキー操作」
 を設定して下さい。割り当てキーは、「Alt+」「Ctrl+」と、任意のキーの組み合
 わせで設定します。「チェック無し」が押し下げ無し、「チェック有り」が押し
 下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 
 　また、キー割り当てを行っても、アプリケーション側の機能の方が優先されて
 しまう場合は、「強力割り当て」をチェックする事で、本機能に優先的に使われ
 るようになります。
 　ただし、全てのアプリケーション上において、そのキー入力を（本機能以外の
 用途には）使えなくなってしまう可能性があるので注意。
 
 　更に「Shift+でクローズ」を選択すると、前記のキー割り当てに Shift キーを
 組み合わせた際に、機能を動作させた直後にウィンドウが自動的にクローズする
 ようになります。
 
 　選択可能な「機能」は、以下の通りです。
 （末尾の括弧内はデフォルトのキー割り当て）
 
 ・オープン.アイコン表示
 ・オープン.ツリー表示
 ・オープン.詳細表示
 ・プロパティー
 ・親ウィンドウのオープン  ( BackSpace )
 ・貼り付け
 ・検索
 ・表示.アイコン表示
 ・表示.ツリー表示
 ・表示.詳細表示
 ・表示.最新表示
 ・分類.名前
 ・分類.拡張子
 ・分類.タイプ
 ・分類.実名
 ・分類.サイズ
 ・分類.最終書き込み日付
 ・分類.最終アクセス日付
 ・分類.作成日付
 ・クローズ                ( F3 )
 
 　※ご使用のOS/2バージョンによって、利用できない機能があります。
 　　（例えば、「親ウィンドウのオープン」は Warp V3 以降でのみ利用できます）
 
 
●キー操作拡張：入力フィールドキー操作
 
 　PM が標準でサポートするテキストエディット機能（入力フィールドと呼ばれま
 す）のキー操作を拡張します。
 
 　「機能」のコンボボックスを設定したい機能に合わせ、「割り当てキー操作」
 を設定して下さい。割り当てキーは、「Alt+」「Ctrl+」「Shift+」と、任意のキ
 ーの組み合わせで設定します。「チェック無し」が押し下げ無し、「チェック有
 り」が押し下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 
 　また、キー割り当てを行っても、アプリケーション側の機能の方が優先されて
 しまう場合は、「強力割り当て」をチェックする事で、本機能に優先的に使われ
 るようになります。
 　ただし、全てのアプリケーション上において、そのキー入力を（本機能以外の
 用途には）使えなくなってしまう可能性があるので注意。
 
 　選択可能な「機能」は、以下の通りです。
 （末尾の括弧内はデフォルトのキー割り当て）
 
 ・範囲選択しながらのページアップ/ダウン  ( PageUp      , PageDown      )
 ・表示先頭行/最終行へのカーソル移動      ( Ctrl+PageUp , Ctrl+PageDown )
 ・前の単語/次の単語へのカーソル移動      ( Ctrl+Left   , Ctrl+Right    )
 ・単語選択/行選択/全選択/選択解除
 ・選択範囲の大文字化/小文字化
 ・切り取り/コピー/張り付け
 
 　デフォルトでは、カーソル移動が「拡張エディター(EPM)」とほぼ同一の操作感
 になるように設定されています。
 
 
●キー操作拡張：入力フィールドInsert状態監視
 
 　まず、入力フィールドにフォーカスが当たっている状態で Insert キーを押し
 下げて、上書き/挿入モードが切り替わるのを確認してみて下さい。
 　その上で、入力フィールド以外のウィンドウ（フォルダとかVIO窓とか）にフォ
 ーカスを当て、Insert キーを１度だけ押し下げ、また入力フィールドにフォーカ
 スを当て直してみましょう。Insert キーを押し下げたのは入力フィールドではな
 かったのにも関わらず、上書き/挿入モードが切り替わっているのが確認できるか
 と思います。
 
 　この便利だか不便だかよく解らない仕様が、（私と同じように）「大きなお世
 話だ〜」と感じる人は、この機能を有効にしてみて下さい。Insert キー押し下げ
 による入力フィールドの上書き/挿入モード切り替えが、入力フィールドにフォー
 カスが当たっている時にのみ限定されるようになります。
 
 
●キー操作拡張：REXXマクロ
 
 　REXX言語にて記述されたスクリプトファイルをマクロとして登録し、それを特
 定のキー操作で実行させる機能です。
 
 　まず「追加」ボタンを押し、この機能で実行させたいREXXスクリプトファイル
 名をリストに追加します。
 （パス指定が省略された場合は、環境変数 PATH に沿って検索される）
 （拡張子指定が省略された場合は、"CMD" であると見なされる）
 （入力済みのファイル名を変更する場合は、「変更」ボタンを押す）
 
 　次に、呼び出すためのキー割り当ての設定と、必要であればREXXスクリプトに
 渡すパラメータ文字列の設定を行います。
 
 　割り当てキーは、「Alt+」「Ctrl+」「Shift+」と、任意のキーの組み合わせで
 設定します。「チェック無し」が押し下げ無し、「チェック有り」が押し下げ必
 須、「チェック不定」が押し下げ任意の設定に該当します。
 
 　また、キー割り当てを行っても、アプリケーション側の機能の方が優先されて
 しまう場合は、「強力割り当て」をチェックする事で、本機能に優先的に使われ
 るようになります。
 　ただし、全てのアプリケーション上において、そのキー入力を（本機能以外の
 用途には）使えなくなってしまう可能性があるので注意。
 
 　パラメータ文字列内に '[' 及び ']' 記号を含めると、スクリプト実行時にパ
 ラメータ入力ダイアログが表示されます。
 （'[' から ']' の間の文字列が、入力された文字列と置換される）
 　また、'[' と ']' の間に文字列が挿入されている場合、ダイアログ表示時に、
 その文字列がメッセージとして表示されます。
 
 　　※'[]'を用いたパラメータ入力が行えるのは、この「キー操作拡張：REXXマ
 　　　クロ」機能のみであり、他のREXXマクロ機能（後述）では使用できません。
 
 　　※複数のREXXスクリプトを並行して実行させることはできません。
 　　　また、上記パラメータ入力ダイアログが表示されている間は、全てのREXX
 　　　マクロ機能が一時休止します。
 
 　「出力モニタ」ボタンを押すと、スクリプト実行時のコンソール出力（エラー
 メッセージ等）を閲覧するためのモニタウィンドウを開きます。
 （スクリプトファイルをデバッグする際に重宝します）
 
 　スクリプトファイルの記述法ですが、キー入力を伴う処理や、実行環境に依存
 （VIO窓限定など）する処理以外の、REXXの機能の全てを使えます。
 　また、本機能を使用して、Ver3.0 以降で削除された旧「Workplaceオブジェク
 ト設定」機能の代替が可能になります。同梱の REXXMAC.LZH 内に、それ相当の機
 能を実現するためのサンプルREXXスクリプトファイル（WPSETUP.CMD）が同梱され
 ていますので、是非ご利用下さい。:-)
 　具体的な設定（の移行）は、以下のようになります。
 
 　ファイル名：
 　　　WPSETUP.CMD
 　パラメータ：
 　　　旧「Workplaceオブジェクト設定」における「オブジェクトID」と「SETUP」
 　　　文字列を、空白で挟んだカンマ記号 ' , ' で区切って記述する。
 　　　（「SETUPを２度行う」場合は、もう１度 ' , ' と「SETUP」文字列を追記）
 　　　例えば、「ドライブ C」を省略時オープンさせるパラメータ文字列は、
 　　　「<WP_DRIVE_C> , OPEN=DEFAULT」となる。
 　割り当てキー操作：
 　　　任意。
 
 　REXX言語の詳しい解説は、オンラインドキュメントの「REXX情報」を、ALWALTFX
 のマクロ独自のルール、及びその上で使用可能な独自の関数などについての詳しい
 解説は、同梱の REXXMAC.LZH 内の REXXMAC.HTM を、それぞれ参照して下さい。
 （HTMLではなく、テキストファイルを所望される方のために、変換スクリプトも
 同梱しています...SPLITTAG.CMD を参照）
 
 　余談ですが、「Workplaceオブジェクト設定」を行うために必要になる、それら
 「オブジェクトID」や「SETUP」文字列の記述法を記したドキュメントは、OS/2
 自体には付属していない模様です。
 （x:\OS2 ディレクトリの INI.RC ファイルが、一応ヒントにはなり得ますが...）
 　詳細な情報を所望される場合は、雑誌「OS/2MAGAZINE」「OS/2WORLD」のバック
 ナンバー等を参照される事をお勧めします。
 
 　※プログラマ向けドキュメントが J-Pocket に入ってたりもします(WPSREF.INF)
 　　が、さすがにアレはちょっと...(^^;)
 
 
●マウス操作拡張：フレーム曖昧掴み
 
 　ウィンドウのフレームやコンテナー分割バー（フォルダの詳細表示等に存在）
 を掴みたいのに、マウスカーソルが思い通りの位置になかなか停止してくれない
 （ノートマシンで、スライドパッド等を使用しているとありがち^^;）場合に、何
 らかの制御キーを押し下げる事で、フレームを掴める位置へ自動的にマウスカー
 ソルを移動させる機能です。
 
 　本機能を発動させるための制御キーとして、「Alt」「Ctrl」「Shift」の組み
 合わせを選択できます。「チェック無し」が押し下げ無し、「チェック有り」が
 押し下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 （最低１つは「チェック有り」に設定されていなければなりません）
 　続いて、「認識範囲」を設定します。これは、カーソル位置から半径何ピクセ
 ルの範囲のフレームを「曖昧掴み」の対象にするかを指定する数値です。
 （範囲内に該当するフレームが無い場合、カーソルは移動しません）
 
 　本機能は通常、「サイズ変更可能フレーム」を持つウィンドウにしか反応しな
 いようになっていますが、「全てのフレームに適用」を有効にすることで、ダイ
 アログ・ウィンドウ等の、サイズ変更不可ウィンドウのフレーム、及び Win-OS2
 アプリ（シームレス）も、カーソル移動の対象とするようになります。
 
 
●マウス操作拡張：微調整ドラッグ
 
 　例えば、ドラッグしたアイコンをドロップする位置をピクセル単位で微調整し
 たい時などに、キー操作でマウスカーソル位置を制御する機能です。
 　本機能を有効にすると、マウスボタンの何れかを押し下げている間だけ、キー
 操作でマウスカーソル位置を変更できるようになります。
 　使用するキーは、以下の通りです。
 
 　上 = 「↑」or「Ｅ」キー
 　下 = 「↓」or「Ｘ」キー
 　左 = 「←」or「Ｓ」キー
 　右 = 「→」or「Ｄ」キー
 
 
●マウス操作拡張：ロールアップ/ダウン操作
 
 　フレーム・ウィンドウをタイトルバーだけの状態に巻き上げたり、元に戻した
 りする機能を、具体的に（タイトルバーに対しての）どんなマウス操作で動作させ
 るか、「Alt+」「Ctrl+」「Shift+」と、任意のボタン＋任意のアクションの組み
 合わせで設定します。「チェック無し」が押し下げ無し、「チェック有り」が押
 し下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 （詳細は後述の「ロールアップ/ダウン動作設定」を参照）
 
 
●マウス操作拡張：タイトルバーメニュー
 
 　タイトルバーに対する任意のマウス操作で、そのフレーム・ウィンドウのシス
 テムメニューをポップアップ表示させる機能です。
 　具体的にどんなマウス操作で動作させるか、「Alt+」「Ctrl+」「Shift+」と、
 任意のボタン＋任意のアクションの組み合わせで設定します。「チェック無し」
 が押し下げ無し、「チェック有り」が押し下げ必須、「チェック不定」が押し下
 げ任意の設定に該当します。
 
 
●マウス操作拡張：入力フィールドマウス操作
 
 　PM が標準でサポートするテキストエディット機能（入力フィールドと呼ばれま
 す）のマウス操作を拡張します。
 
 　「機能」のコンボボックスを設定したい機能に合わせ、「割り当てマウス操作」
 を設定して下さい。割り当てマウス操作は、「Alt+」「Ctrl+」「Shift+」と、任
 意のマウス操作の組み合わせで設定します。「チェック無し」が押し下げ無し、
 「チェック有り」が押し下げ必須、「チェック不定」が押し下げ任意の設定に該
 当します。
 
 　選択可能な「機能」については、「キー操作拡張：入力フィールドキー操作」
 を参照して下さい。
 　デフォルトでは、ボタン１ダブルクリックによる「単語選択」のみが有効にな
 っています。
 
 
●マウス操作拡張：REXXマクロ
 
 　REXX言語にて記述されたスクリプトファイルをマクロとして登録し、それを特
 定のマウス操作で実行させる機能です。
 
 　まず「追加」ボタンを押し、この機能で実行させたいREXXスクリプトファイル
 名をリストに追加します。
 （パス指定が省略された場合は、環境変数 PATH に沿って検索される）
 （拡張子指定が省略された場合は、"CMD" であると見なされる）
 （入力済みのファイル名を変更する場合は、「変更」ボタンを押す）
 
 　次に、呼び出すためのマウス操作割り当ての設定と、必要であればREXXスクリ
 プトに渡すパラメータ文字列の設定を行います。
 
 　割り当てマウス操作は、「Alt+」「Ctrl+」「Shift+」と、任意のマウス操作の
 組み合わせで設定します。「チェック無し」が押し下げ無し、「チェック有り」
 が押し下げ必須、「チェック不定」が押し下げ任意の設定に該当します。
 
 　REXXマクロ機能についての詳しい解説は、「キー操作拡張：REXXマクロ」を参
 照して下さい。
 
 
●ウィンドウ制御：フレームウィンドウ位置制御
 
 　フォルダやVIO窓など、いわゆる「フレーム・ウィンドウ」をオープンした時に、
 画面外にはみ出ていた場合に、強制的に中央方向へ移動させる機能です。
 
 　設定方法は、まず上下左右どの方向への「はみ出し」を位置制御対象にするか
 を選択し、必要ならば、制御対象座標を実際の画面端よりも内側or外側に調整し
 ます。
 （数値(ピクセル単位)を上げれば内側、下げれば外側）
 
 　例えば、Warp4 使用時に「WarpCenter」に被さらないように各種ウィンドウが
 オープンするようにしたい場合は、以下のように設定します。
 
 　・「上」または「下」（WarpCenterのある方向）をチェック
 　・その数値に「22」または「26」（WarpCenterの縦幅、各々WarpCenterのプロ
 　　パティー内の「アイコン」の「小」または「大」に対応）を入力
 
 　本機能は通常「サイズ変更可能フレーム」を持つウィンドウにしか反応しない
 ようになっていますが、「全てのフレームに適用」を有効にすることで、ダイア
 ログ・ウィンドウ等のサイズ変更不可フレーム・ウィンドウも、位置制御の対象
 にするようになります。
 　また、「タイトルバー有りのみ」を有効にすると、ツールバー（ランチパッド）
 等のタイトルバーを持たないウィンドウを、位置制御対象から外す事ができます。
 
 　本機能を利用される際に注意して頂きたい点を、以下に列挙します。
 
 ・この機能は、各種ウィンドウが「オープン」した直後の１回のみ機能します。
 　最大/最小化実行されたアプリケーション、及び全画面実行されたDOS窓がウィ
 　ンドウ表示に切り替わる際などには機能しません。
 
 ・Win-OS2 アプリ（シームレス）には効果がありません。
 　その他、特殊な「オープン」を行う（多くの場合は「ゴージャス」な）ウィン
 　ドウに対しては、機能しない事があります。
 
 
●ウィンドウ制御：VIOウィンドウ位置/サイズ補正
 
 　VIO窓の「最大化」または「復元」を行うと、通常VIO窓は勝手に（例えば「最
 大化」を行った場合は左上へ）移動してしまいます。
 　「位置補正」機能を有効にすると、「最大化」及び「復元」時に、ウィンドウ
 の位置を動かさずに、その場で「最大化/復元」が行われるようになります。
 
 　「復元時にウィンドウ伸張」機能は、「復元」時にもウィンドウサイズを最大
 状態で保持させるための機能です。
 
 　※これらの機能のうち「最大化時に位置補正」機能だけは、ver2.x 以前のバー
 　　ジョンの OS/2 では何故か機能しません。
 　　回避策も解らなかったので、現段階では「仕様」とさせて頂きます。_(__)_
 
 
●ウィンドウ制御：REXXマクロ
 
 　REXX言語にて記述されたスクリプトファイルをマクロとして登録し、それを特
 定のPMメッセージをトリガとして実行させる機能です。
 
 　まず「追加」ボタンを押し、この機能で実行させたいREXXスクリプトファイル
 名をリストに追加します。
 （パス指定が省略された場合は、環境変数 PATH に沿って検索される）
 （拡張子指定が省略された場合は、"CMD" であると見なされる）
 （入力済みのファイル名を変更する場合は、「変更」ボタンを押す）
 
 　次に、呼び出し対象とするPMメッセージの選択と、必要であればREXXスクリプ
 トに渡すパラメータ文字列の設定を行います。
 
 　選択可能な「対象PMメッセージ」及びその発生条件は、以下の通りです。
 
 ・WM_ACTIVATE(TRUE)
 　　フレーム・ウィンドウがアクティブになった
 
 ・WM_SETFOCUS(TRUE)
 　　フォーカス・ウィンドウが切り替わった
 
 ・WM_SHOW(1ST)
 　　フレーム・ウィンドウが作成後初めて表示された
 　　（デスクトップ・ウィンドウ直下のウィンドウのみ対象）
 　　（厳密には、WM_SHOW メッセージのフックではなく、もっと複雑な条件を加
 　　味してのフックなのですが、便宜上こういう呼び名を付けています）
 
 ・WM_DESTROY
 　　ウィンドウが破棄された
 　　（デスクトップ・ウィンドウ直下のウィンドウのみ対象）
 
 ・WM_MINMAXFRAME(MIN)
 ・WM_MINMAXFRAME(MAX)
 ・WM_MINMAXFRAME(RST)
 　　フレーム・ウィンドウが最小化/最大化/復元された
 　　（厳密には、WM_MINMAXFRAME の直後の WM_WINDOWPOSCHANGED をフックする）
 
 ・WM_COMMAND
 ・WM_SYSCOMMAND
 　　(システム)メニュー項目が選択された
 
 　　何のメニュー項目が選択されたのかは、REXXスクリプトを呼び出すきっかけ
 　　になったメッセージパラメタを知る機能（ArxQueryMsgParam関数）により、
 　　間接的に調べる事が出来ます。
 　　具体的には、メッセージパラメタ１(MP1)の下４桁に、例えば以下のようなコ
 　　マンドＩＤが設定されます。
 
 　　　　　　'8000' ... サイズ変更 (SC_SIZE)
 　　　　　　'8001' ... 移動       (SC_MOVE)
 　　　　　　'8002' ... 最小化     (SC_MINIMIZE)
 　　　　　　'8003' ... 最大化     (SC_MAXIMIZE)
 　　　　　　'8004' ... 閉じる     (SC_CLOSE)
 　　　　　　'8008' ... 復元       (SC_RESTORE)
 　　　　　　'802A' ... 隠す       (SC_HIDE)
 
 　REXXマクロ機能についての詳しい解説は、「キー操作拡張：REXXマクロ」を参
 照して下さい。
 
 
●ユーザーインターフェース：ポップアップメニュー
 
 　入力フィールド／リストボックス／ノートブック上で、システム定義のコンテ
 キストメニュー呼び出しマウス操作（通常は第２ボタン...通常は右側...をシン
 グルクリック）する事により、入力フィールド及びリストボックス上では、クリ
 ップボードとのデータ転送用の、ノートブック上では、ページ選択用のポップア
 ップメニューが表示されるようになります。
 
 　リストボックスについては、更に「コンボボックスも対象」を有効にすることに
 より、コンボボックスをドロップダウンさせた時に表示されるリストボックスも、
 機能の対象にします。
 
 　※ポップアップメニュー表示時に、コンボボックスのドロップダウン状態が解
 　　除、つまりリストボックスが非表示となりますが、これは仕様です。
 　　（この状態からでも、クリップボードへのコピーは、問題無く行えます）
 
 　ノートブックについては、更に「キー操作で表示」を有効にする事により、シ
 ステム定義のコンテキストメニュー呼び出しキー操作（通常は Shift+F10）でも
 ポップアップメニューが表示されるようになります。
 
 　ノートブックのメニューは、（Warp4以降でサポートされた）カラフルなタブを
 持つノートブックでは標準搭載されている機能ですが、本機能は既存の機能を上
 書きし、旧来のノートブックでもメニューを使用できるようにします。
 
 　※Warp4 以降の WorkplaceShell の設定ノート上で「ノートブックメニュー」
 　　機能を使用した場合、ちょっと変な動作をする事があります。これは、キー
 　　操作（Shift+F10）によるポップアップ機能を、WorkplaceShell が独自に実
 　　装しており、本機能による上書きが完全に行えないからです。
 　　回避策も解らなかったので、現段階では「仕様」とさせて頂きます。_(__)_
 
 
●ユーザーインターフェース：操作の徹底
 
 　「Shift+オープン → クローズ」をチェックすると、ツリー表示/詳細表示状態
 のフォルダからの「オープン」操作や、システムメニューから「オープン」メニ
 ュー項目を選択した場合にも、Shift キーが押し下げられていれば、オープン操
 作後に必ず、その親ウィンドウをクローズするようになります。
 
 　※本機能は、WarpV3 以降の OS/2 でのみ利用可能です。
 
 　「ESC → トラッキング中止」をチェックすると、非アクティブ・ウィンドウの
 フレームまたはタイトルバーをドラッグしてのウィンドウの移動/サイズ変更（ト
 ラッキングと呼ばれます）時でも、ESC キーで中断できるようになります。
 
 　「コンボボックスの横スクロール」をチェックすると、コンボボックスをドロ
 ップダウンさせた時に表示されるリストボックスを、左右カーソルキーで横スク
 ロールさせる事が出来るようになります。
 （ただし、リストボックスに横スクロールバーが付いている場合に限る）
 
 
●ユーザーインターフェース：タスクスイッチャ置換
 
 　Alt+TAB操作で出るタスクスイッチ・ウィンドウを、独自のタスクスイッチャに
 置き換えます。
 
 　※本機能は、Warp4 以降の OS/2 でのみ利用可能です。
 
 　「モジュール名」は、この機能を実現するためのDLLファイル名が記述されてお
 り、「変更」ボタンを押して変更可能です。
 （正常にDLLがロードされると、その下に「ロード済み」と表記される）
 　また、「設定」ボタンを押すと、タスクスイッチャの動作設定を行うダイアロ
 グ・ウィンドウが表示されます。
 
 　ALWALTFXが提供するタスクスイッチャ（ALWATASK）は、標準のものに比べて、
 以下のような特徴があります。
 
 　・全ての選択可能なタスクが一度に表示されます。
 　・矢印キーを用いて切り替え先タスクを選択できます。また、英数字キーを押
 　　すと、先頭がその文字であるタスクに直接カーソルが移動します。
 　　（Altキーから手を離すか、ENTERキー押し下げでタスク選択決定）
 　　（SPACEキー押し下げで操作取消）
 　・マウスによる操作も可能です。シングルクリック（ボタンは任意）でカーソ
 　　ル位置の変更、ダブルクリック（同上）でタスク選択決定です。
 　・タスク一覧表示から除外するタスク名を設定できます。
 　　（「設定」ボタンを押してダイアログを表示し、追加/削除を行う）
 
 　なお、タスクスイッチ・ウィンドウは、「システム設定」フォルダの「システ
 ム」設定ノートの「ユーザー・インターフェース」ページの「Alt-Tabスイッチ・
 ウィンドウ」チェックボックスをチェックすると、利用できるようになります。
 　「タスクスイッチャ置換」機能を正しく動作させるには、この設定が有効にな
 っている必要があります。
 
 　※タスクスイッチャのソースファイルが、同梱の OTHER.LZH ファイルに入れて
 　　ありますので、興味のある方や、機能が物足りないという方は、どうぞ。:-)
 
 
●システムメニュー加工
 
 　フレーム・ウィンドウ左上の「システムメニューアイコン」をクリックする等
 の操作で出てくるプルダウンメニューから、普段あまり（全く）使わない項目を
 選んで削除し、メニューの見通しを良く(?)したり、ALWALTFX の機能である、フ
 レーム・ウィンドウのロールアップ/ダウンや、フォルダ内の拡張子分類を、メニ
 ューに追加したりするための機能です。
 
 　「項目」のコンボボックスを加工したい項目に合わせ、「加工手段」を選択し
 ます。加工手段には「追加」「削除」「変更」があり、「追加」「変更」を選択
 した場合は更に「変更後」の文字列の編集を行います。
 （「変更後」の文字列長は、最大31字まで）
 
 　「変更前」の文字列は基本的には変更不可で、デフォルトでは「日本語版 OS/2
 Warp V3 以降」のメニュー文字列に合わせて設定されています。
 　この文字列と、実際のメニュー文字列が一致していないと、メニュー文字列の
 加工は行われません。よって、それ以外のバージョンの OS/2 で使用される場合
 は、「「変更前」テキスト編集可」を有効にし、双方の文字列が一致するように、
 編集を行う必要があります。
 
 　※例えば、「日本語版 OS/2 ver2.x」を使用されている場合は、「コピー」を
 　　「複写」に、「すべてコピー」を「すべて複写」に、それぞれ編集します。
 
 　選択可能な「項目」は、以下の通りです。
 
 ・不要な項目
 ・ウィンドウ・リスト
 ・かな漢字制御メニュー
 ・ヘルプ                 *1
 ・フォント・サイズ       *1
 ・スクロール             *1
 ・マーク                 *1
 ・コピー                 *1
 ・すべてコピー           *1
 ・貼り付け               *1
 ・マウス・アクション     *1
 ・全画面表示             *1
 ・DOS 設定               *1
 ・セパレータ             *1
 ・ロールアップ/ダウン
 ・分類.拡張子
 
     *1 ... VIO窓のメニュー項目です。
 
 　デフォルトでは、「不要な項目」の削除と、幾つかの長めのメニューの「短縮」
 が行われるように設定されています。
 
 　「不要な項目」とは、選択不可能状態にあるシステムメニュー項目（例えば、
 最大化されたウィンドウでの「最大化」等）の全てを指し、「削除」を選択する
 と、ウィンドウ状態に応じて、適宜にシステムメニュー項目から不要な項目を削
 除します。
 
 　なお、「ロールアップ/ダウン」及び「分類.拡張子」が追加されるメニュー上
 の位置は、固定（前者は「隠す(H)」の次、後者は「分類.名前(N)」の次）です。
 
 
●VX-REXXウィンドウ対応
 
 　VX-REXX にて開発されたアプリケーション（具体的には、実行に VROBJ.DLL を
 必要とする物を指す）上では、デフォルトでは幾つかの ALWALTFX の機能が利用
 できませんが、この設定を有効にする事により、利用できるようになります。
 　具体的には、以下の機能が VX-REXX にて開発されたアプリケーション上で利用
 できるようになります。
 
 ・入力フィールドキー操作拡張
 ・入力フィールドInsert状態監視
 ・入力フィールドマウス操作拡張
 ・入力フィールドメニュー
 ・リストボックスメニュー
 ・ノートブックメニュー
 ・REXXマクロにおける、入力フィールド関連の関数
 
 
●REXXファイル名短縮表示
 
 　ALWALTFX の設定ノートにおける、各「REXXマクロ」ページのファイル名の短縮
 表示（パス部分を "..." で表記）の有無を切り替えます。
 （表示のみの設定で、REXXマクロ機能には何の影響もありません）
 
 
●ポップアップメニュー位置補正
 
 　ALWALTFX が提供する各ポップアップメニュー機能について、メニュー表示の際
 に、メニュー全体がスクリーン内に収まるようにポップアップ位置を補正するか
 どうかを設定します。
 　デフォルトでは縦方向/横方向ともに有効になっていますが、例えば「ポップア
 ップ位置とマウスポインターの位置関係が常に一定であってほしい」と所望する
 場合などに、オフにしてみて下さい。
 
 
●ロールアップ/ダウン動作設定
 
 　前述「キー操作拡張」及び「マウス操作拡張」でも触れました、フレーム・ウ
 ィンドウをタイトルバーだけの状態に巻き上げたり、元に戻したりする機能であ
 る「ロールアップ/ダウン」機能の、動作設定を行います。
 
 　本機能は通常、「サイズ変更可能フレーム」を持つウィンドウにしか反応しな
 いようになっていますが、「全てのフレームに適用」を有効にすることで、ダイ
 アログ・ウィンドウ等の、サイズ変更不可ウィンドウのフレームも、ロールアッ
 プ/ダウンの対象とするようになります。
 
 　また、ウィンドウをロールアップさせる際に自動的に非アクティブ化させたり、
 ウィンドウのアクティブ時/クローズ時に、ロールアップ状態のウィンドウを自動
 的にロールダウンさせる事もできます。
 （デフォルトでは、クローズ時の自動ロールダウンのみが有効になっている）
 
 　本機能を利用される際に注意して頂きたい点を、以下に列挙します。
 
 ・Win-OS2 アプリ（シームレス）には効果がありません。
 
 ・同時にロールアップ可能なウィンドウ数に制限があります（64個）。
 　これが足枷になる事はほとんど無いと思いますが、あったという人は作者まで
 　連絡下さい。(^^ゞ
 
 ・同様の機能を持つ、他のユーティリティソフト（Xit等）と ALWALTFX を併用さ
 　れる場合は、どちらか片方の機能を無効にして下さい。
 
 ・これは余談ですが、本機能により「デスクトップ」ウィンドウもロールアップ
 　させる事も可能です。間違えて「デスクトップ」上でロールアップ操作をして
 　しまった（デスクトップがスッキリ姿を消してしまいます）ら、慌てず騒がず、
 　Ctrl+ESC キーで「ウィンドウ・リスト」を出してデスクトップにフォーカスを
 　当て、もう一度ロールアップ操作を行えば、元の状態に復帰します。
 
 
___________________________________________________________________________
 
■５．コマンドラインオプションについて
 
 
 　コマンドラインオプションとして、以下のような物が用意されています。
 
 
 /Dn ... ALWALTFX の起動（設定ノート作成）を、n秒間遅延させます。
         「始動」フォルダに ALWALTFX のプログラムオブジェクトを入れていて、
         その起動時の負荷が、他アプリケーションの起動に影響を与えるような
         場合に、このオプションを指定して下さい。
 
         　※本オプション指定により ALWALTFX が遅延起動待機中に、もう一度
         　　ALWALTFX を起動させると、遅延処理を取り消し、即座に起動します。
 
 /H  ... ALWALTFX が、「ウィンドウ・リスト」上に現れないようにします。
         なお、このオプションを付けて起動した ALWALTFX を「最小化」させた
         後に、再び設定ウィンドウを表示させたい場合は、「最小化ウィンドウ
         ・ビューアー」内の ALWALTFX アイコンをダブルクリックするか、もう
         １度 ALWALTFX.EXE を起動して下さい。
 
 /N  ... 最小化状態で起動します。
 
 /Q  ... 「全機能休止」状態で起動します。
         何らかの機能を有効にしたのが原因で、ALWALTFX が起動直後にハングを
         起こす等する場合に、このオプションを指定して起動し、該当する機能
         を無効にすると良いでしょう。
 
 /S  ... CSD を適用していない Warp4 にて不具合（VIO窓でAltキーを押し下げる
         とフリーズ誘発）を発生させる恐れがある機能を全て使用不可にします。
         具体的には、各々の機能に対し、以下の様に制限が設けられます。
 
         ・PM(Alt+Function)キー操作拡張 ... 可 *1
         ・WorkplaceShellキー操作       ... 可
         ・入力フィールドキー操作拡張   ... 不可
         ・入力フィールドInsert状態監視 ... 不可
         ・REXXマクロ(キー)             ... 可
         ・フレーム曖昧掴み             ... 可
         ・微調整ドラッグ               ... 可
         ・タイトルバーメニュー         ... 不可
         ・入力フィールドマウス操作拡張 ... 不可
         ・REXXマクロ(マウス)           ... 可
         ・フレームウィンドウ位置制御   ... 不可
         ・VIOウィンドウ位置/サイズ補正 ... 一部可 *2
         ・REXXマクロ(ウィンドウ)       ... 不可
         ・システムメニュー加工         ... 不可
         ・ポップアップメニュー         ... 可 *3
         ・操作の徹底                   ... 不可
         ・タスクスイッチャ置換         ... 不可
         ・ロールアップ/ダウン操作      ... 一部可 *4
 
             *1 ... 「キー操作記録」状態表示が消えない不具合が発生する事が
                    あります。
             *2 ... 「復元時にウィンドウ伸張」機能が使用できません。
             *3 ... 他の、独自メニューを追加するアプリとの併用時に、不具合
                    （メニュー表示が乱れる等）が発生する事があります。
             *4 ... 「自動的にロールダウン」機能が使用できません。
 
 
 　※以前のバージョン（ver1.x）でサポートしていた、コマンドラインオプショ
 　　ンによる各機能の有効/無効の切り替えは、ALWALTFX 自身のスイッチ類がや
 　　たらと増えたため、(^-^;) ver2.x 以降はサポート外となりました。
 
 
___________________________________________________________________________
 
■６．その他
 
 
 　著作権等については、「フリーソフトウェアとしての一般常識から逸脱しない
 よう取り扱って下さい」とだけ、お断りしておきます。:-)
 
 　転載及び配布については、「オリジナルのアーカイブ内のファイル全てが改変
 されずに含まれる」事を条件として、自由とします。
 　転載等の際には、事後でも結構ですから連絡を頂けると有り難いです。(^.^)
 
 
 　ご意見、ご感想など頂けたら、幸いです。(^-^)/〜
 
 
 
                           Written by A.Y.DAYO(^-^)v (FZS02603@nifty.ne.jp)
 
[EOF]
